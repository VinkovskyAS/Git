#Использовать "../../lib/json"

Перем ИмяСтадииДо; // Имя Стадии до переноса в новую
Процедура ПеренестиЗадачиВФинальнуюСтадию(НастройкиИзJson) Экспорт
	
	СтруктураПараметровТрекер = НастройкиИзJson.youtrack;
	Если Не СтруктураПараметровТрекер.use Тогда

		Возврат;
		
	КонецЕсли; 
	ИспользуемыеПроекты = СтруктураПараметровТрекер.projectNames;
	ИмяСтадииДо = СтруктураПараметровТрекер.stageBefore.name;


	ШаблонЗапросаЗадачи = "api/issues?fields=$type,id,summary,customFields($type,id,projectCustomField($type,id,field($type,id,name)),value($type,avatarUrl,buildLink,color(id),fullName,id,isResolved,localizedName,login,minutes,name,presentation,text))&query=project:+%7B#ИмяПроекта#%7D'";

	Для каждого ИмяПроекта Из ИспользуемыеПроекты Цикл
		ТекстЗапросаЗадачи = СтрЗаменить(ШаблонЗапросаЗадачи, "#ИмяПроекта#", ИмяПроекта.shortName);
		МассивЗадач = Неопределено;
		МассивЗадач = ПолучитьМассивЗадач(СтруктураПараметровТрекер, ТекстЗапросаЗадачи);
		Если МассивЗадач = Неопределено ИЛИ ТипЗнч(МассивЗадач) <> Тип("Массив") Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого СтруктураЗадачи Из МассивЗадач Цикл
			ЗадачаВНужнойСтадии = ЗадачаВНужнойСтадии(СтруктураЗадачи);
			Если ЗадачаВНужнойСтадии Тогда
				ПеренестиЗадачу(СтруктураПараметровТрекер, СтруктураЗадачи);
			КонецЕсли;
			
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры

Функция ЗадачаВНужнойСтадии(СтруктураЗадачи)
	ЗадачаВНужнойСтадии = Ложь;
	Если Не СтруктураЗадачи.Свойство("customFields") Тогда
		Возврат ЗадачаВНужнойСтадии;
	КонецЕсли;
	Для каждого ПользовательскоеПоле Из СтруктураЗадачи.customFields Цикл
		Если Не ПользовательскоеПоле.Свойство("value") ИЛИ Не ТипЗнч(ПользовательскоеПоле.value) = Тип("Структура") Тогда
			Продолжить;
		КонецЕсли;	
		Если Не ПользовательскоеПоле.value.Свойство("name") Тогда
			Продолжить;
		КонецЕсли;
		Если ПользовательскоеПоле.value.name = ИмяСтадииДо Тогда
			ЗадачаВНужнойСтадии = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ЗадачаВНужнойСтадии;
КонецФункции

Процедура ПеренестиЗадачу(СтруктураПараметровТрекер, ПоляЗадачи)
	
	ИдентификаторЗадачи = ПоляЗадачи.id;
	Сообщить(ИдентификаторЗадачи);

	СоответствиеПоля = Новый Соответствие();

	МассивИзменяемыхПолей = Новый Массив();
	СоответствиеИзменяегоПоля = Новый Соответствие();

	СоответствиеНовогоЗначения = Новый Соответствие();
	СоответствиеНовогоЗначения.Вставить("isResolved", Истина);
	СоответствиеНовогоЗначения.Вставить("localizedName", null);
	СоответствиеНовогоЗначения.Вставить("name", СтруктураПараметровТрекер.stageAfter.name);
	СоответствиеНовогоЗначения.Вставить("id", СтруктураПараметровТрекер.stageAfter.id);
	СоответствиеНовогоЗначения.Вставить("$type", СтруктураПараметровТрекер.stageAfter.type);

	СоответствиеИзменяегоПоля.Вставить("name", "State");
	СоответствиеИзменяегоПоля.Вставить("$type", "StateIssueCustomField");
	СоответствиеИзменяегоПоля.Вставить("value", СоответствиеНовогоЗначения);

	

	МассивИзменяемыхПолей.Добавить(СоответствиеИзменяегоПоля);

	СоответствиеПоля = Новый Соответствие();
	СоответствиеПоля.Вставить("customFields", МассивИзменяемыхПолей);

	json = Новый ПарсерJson;
	СтрокаТелаJSON = json.ЗаписатьJSON(СоответствиеПоля);


	СтруктураСоединения = ПолучитьСоединение(СтруктураПараметровТрекер);
	ТекстЗапросаЗадачи = "api/issues/" + ИдентификаторЗадачи;

	Соединение = СтруктураСоединения.Соединение;
	Заголовки = СтруктураСоединения.Заголовки;
	ЗапросХТТП = Новый HTTPЗапрос(ТекстЗапросаЗадачи);
	ЗапросХТТП.Заголовки = Заголовки;
	ЗапросХТТП.УстановитьТелоИзСтроки(СтрокаТелаJSON);

	РезультатЗапроса = Соединение.ОтправитьДляОбработки(ЗапросХТТП);
	ТелоЗапроса = РезультатЗапроса.ПолучитьТелоКакСтроку();
	Сообщить(ТелоЗапроса);

КонецПроцедуры



Функция ПолучитьМассивЗадач(СтруктураПараметровТрекер, ТекстЗапросаЗадачи)

	СтруктураСоединения = ПолучитьСоединение(СтруктураПараметровТрекер);
	Соединение = СтруктураСоединения.Соединение;
	Заголовки = СтруктураСоединения.Заголовки;
	ЗапросХТТП = Новый HTTPЗапрос(ТекстЗапросаЗадачи);
	ЗапросХТТП.Заголовки = Заголовки;
	
		
	Попытка

		РезультатЗапроса = Соединение.Получить(ЗапросХТТП);
		ТелоЗапроса = РезультатЗапроса.ПолучитьТелоКакСтроку();
		ТелоЗапроса = СтрЗаменить(ТелоЗапроса, "$", "_");

		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоЗапроса); 

		МассивЗадач = ПрочитатьJSON(ЧтениеJSON, , , ); 

		ЧтениеJSON.Закрыть();
		
	Исключение
		МассивЗадач = Неопределено;
	КонецПопытки;
	
	// Сообщить(ТелоЗапроса);

	Возврат МассивЗадач;
	
КонецФункции

Функция ПолучитьСоединение(СтруктураПараметровТрекер)

	Сервер = СтруктураПараметровТрекер.server;
	Токен  = "Bearer " + СтруктураПараметровТрекер.token;
	Соединение = Новый HTTPСоединение(Сервер, , , , , 100);

	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Authorization", Токен);
	Заголовки.Вставить("Accept", "application/json");
	Заголовки.Вставить("Content-Type", "application/json");

	СтруктураСоединения = Новый Структура("Соединение, Заголовки", Соединение, Заголовки);

	Возврат СтруктураСоединения;
	
КонецФункции