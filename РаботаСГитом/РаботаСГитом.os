#Использовать "../lib/gitrunner"
#Использовать "../lib/1commands"
#Использовать "../ОбщегоНазначения"



Функция ПолучитьИзУдаленногоРепозитория(СтруктураПараметровЕДТ, НастройкиИзJson) Экспорт

	НоваяВетка = СтруктураПараметровЕДТ.brancheName + "_" + Формат(ТекущаяДата(), "ДФ=гггг_ММ_дд_ЧЧ_мм");
	ГитРепозиторий = Новый ГитРепозиторий();

	ЛокальныйКаталогРепозитория = НастройкиИзJson.reositoryLocalName;
	ЛокальныйКаталогРепозитория = СтрЗаменить(ЛокальныйКаталогРепозитория, "/", "\");

	ИмяРепозитория = НастройкиИзJson.repositoryName;

	
	ГитРепозиторий.УстановитьРабочийКаталог(ЛокальныйКаталогРепозитория);
	ГитРепозиторий.Получить(ИмяРепозитория, СтруктураПараметровЕДТ.brancheName);
	Сообщить("Получили ветку " + СтруктураПараметровЕДТ.brancheName + " из удаленного репозитория");
	ГитРепозиторий.СоздатьВетку(НоваяВетка);
	Сообщить("Создали ветку " + НоваяВетка + " в локальном репозитории");

	ГитРепозиторий.ПерейтиВВетку(НоваяВетка);
	ВыгрузитьВФайлыИзЕДТ(СтруктураПараметровЕДТ);

	СтруктураГитРепозитория = Новый Структура("ГитРепозиторий, Ветка, НоваяВетка"
		, ГитРепозиторий, СтруктураПараметровЕДТ.brancheName, НоваяВетка);

	Возврат СтруктураГитРепозитория;

КонецФункции

Процедура УдалитьВетку(СтруктураГитРепозитория) Экспорт
	ГитРепозиторий = СтруктураГитРепозитория.ГитРепозиторий;
	ИмяВетки = СтруктураГитРепозитория.НоваяВетка;
	ИмяВеткиДляПерехода = СтруктураГитРепозитория.Ветка;

	ГитРепозиторий.ПерейтиВВетку(ИмяВеткиДляПерехода);
	КомандаУдаленияВетки = "branch -D " + ИмяВетки;
	ГитРепозиторий.ВыполнитьПроизвольнуюКомандуГит(КомандаУдаленияВетки);
	Сообщить("Удалили ветку: "+ ИмяВетки);
	
КонецПроцедуры

Процедура ПолучитьИсторию(СтруктураПараметровЕДТ, СтруктураГитРепозитория) Экспорт
	СекундВЧасе = 3600;
	НачачалоПериодаКоммитов = ТекущаяДата() - (СтруктураПараметровЕДТ.periodCommins * СекундВЧасе);
	НачачалоПериодаКоммитовСтрокой = Формат(НачачалоПериодаКоммитов, "гггг-ММ-ддTЧЧ:мм:сс-00:00");
	ДатаНачалаКоммитов = "--since=" + Символ(34) + НачачалоПериодаКоммитовСтрокой + Символ(34);

	ФайлИсторииКоммитов = СтрЗаменить(СтруктураПараметровЕДТ.fileCommitHistory, "/", "\");
	
	КомандаПолученияИстории = "--no-pager log ДатаНачалаКоммитов >  ФайлИсторииКоммитов";
	КомандаПолученияИстории = СтрЗаменить(КомандаПолученияИстории, "ФайлИсторииКоммитов", ФайлИсторииКоммитов);
	КомандаПолученияИстории = СтрЗаменить(КомандаПолученияИстории, "ДатаНачалаКоммитов", ДатаНачалаКоммитов);

	СтруктураГитРепозитория.ГитРепозиторий.ВывестиИсторию(Ложь, КомандаПолученияИстории);
КонецПроцедуры

Процедура ВыгрузитьВФайлыИзЕДТ(СтруктураПараметровЕДТ)
	КаталогВыгрузки = СтрЗаменить(СтруктураПараметровЕДТ.configurationFiles, "/", "\");
	ОбщегоНазначения.УдалитьФайлыИзКаталога(КаталогВыгрузки);
	КаталогВыгрузки = Символ(34) + КаталогВыгрузки+ Символ(34);
	РабочаяОбласть = Символ(34) + СтрЗаменить(СтруктураПараметровЕДТ.workspaceLocation, "/", "\") + Символ(34);
	КаталогЕдт = Символ(34) + СтрЗаменить(СтруктураПараметровЕДТ.edtLocation, "/", "\") + Символ(34);
	ПроектаЕдт = Символ(34) + СтрЗаменить(СтруктураПараметровЕДТ.project, "/", "\") + Символ(34);

	ТекстКоманднойСтроки = "ring ВерсияЕдт ";
	ТекстКоманднойСтроки = ТекстКоманднойСтроки + "workspace export --project ПроектаЕдт ";
	ТекстКоманднойСтроки = ТекстКоманднойСтроки + "--configuration-files КаталогВыгрузки ";
	ТекстКоманднойСтроки = ТекстКоманднойСтроки + "--workspace-location РабочаяОбласть";
	ТекстКоманднойСтроки = СтрЗаменить(ТекстКоманднойСтроки, "ВерсияЕдт", СтруктураПараметровЕДТ.edtVersion);
	ТекстКоманднойСтроки = СтрЗаменить(ТекстКоманднойСтроки, "ПроектаЕдт", ПроектаЕдт);
	ТекстКоманднойСтроки = СтрЗаменить(ТекстКоманднойСтроки, "КаталогВыгрузки", КаталогВыгрузки);
	ТекстКоманднойСтроки = СтрЗаменить(ТекстКоманднойСтроки, "РабочаяОбласть", РабочаяОбласть);
	ТекстКоманднойСтроки = СтрЗаменить(ТекстКоманднойСтроки, "КаталогЕдт", КаталогЕдт);
	Команда = Новый Команда;
	Команда.УстановитьСтрокуЗапуска(ТекстКоманднойСтроки);

	Команда.Исполнить();
	

	 Сообщить("Выгрузили файлы кофигурации");

КонецПроцедуры