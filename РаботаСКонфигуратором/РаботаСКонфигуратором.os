#Использовать "../lib/v8runner"
#Использовать "../ОбщегоНазначения"

Процедура ЗагрузитьКонфигурациюИзФайлов(СтруктураПараметровЕДТ, СтруктураПараметровБазы) Экспорт
	КаталогВыгрузки = СтрЗаменить(СтруктураПараметровЕДТ.configurationFiles, "/", "\");
	Конфигуратор = Новый УправлениеКонфигуратором();
	УстановитьКонтекст(Конфигуратор, СтруктураПараметровБазы);
	Конфигуратор.ЗагрузитьКонфигурациюИзФайлов(КаталогВыгрузки);
	ОбщегоНазначения.УдалитьФайлыИзКаталога(КаталогВыгрузки);

	Сообщить("Загрузили файлы кофигурации");
	Конфигуратор.ОбновитьКонфигурациюБазыДанных(Ложь, Истина);
	Сообщить("Обновили конфигурацию базы данных");
	

КонецПроцедуры

Процедура УстановитьКонтекст(Конфигуратор, СтруктураПараметровБазы)
	ПараметрыСтрокиСоединения = Конфигуратор.ПараметрыСтрокиСоединения();

	Если СтруктураПараметровБазы.isFileBase = true  Тогда
		ИмяБазы = СтрЗаменить(СтруктураПараметровБазы.name, "/", "\");
		ПараметрыСтрокиСоединения.ПутьКФайлуБазы = ИмяБазы;
	Иначе
		ПараметрыСтрокиСоединения.Сервер = СтруктураПараметровБазы.Srvr;
		ПараметрыСтрокиСоединения.ИмяБазы = СтруктураПараметровБазы.name;
		ПараметрыСтрокиСоединения.Порт = СтруктураПараметровБазы.potr;
	КонецЕсли;

	Конфигуратор.УстановитьКонтекст(ПараметрыСтрокиСоединения, 
										СтруктураПараметровБазы.login, 
										СтруктураПараметровБазы.pass);
	УстановитьВерсиюПлатформы(Конфигуратор, СтруктураПараметровБазы);

КонецПроцедуры

Процедура УстановитьВерсиюПлатформы(Конфигуратор, СтруктураПараметровБазы)
	Если ЗначениеЗаполнено(СтруктураПараметровБазы.v8Version) Тогда
		Конфигуратор.ИспользоватьВерсиюПлатформы(СтруктураПараметровБазы.v8Version);
	КонецЕсли;
КонецПроцедуры